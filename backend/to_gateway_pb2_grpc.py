# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import to_gateway_pb2 as to__gateway__pb2


class temporalGraphStub(object):
  """temporal service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.temps = channel.unary_unary(
        '/temporalGraph/temps',
        request_serializer=to__gateway__pb2.temp_in.SerializeToString,
        response_deserializer=to__gateway__pb2.temp_out.FromString,
        )


class temporalGraphServicer(object):
  """temporal service definition
  """

  def temps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_temporalGraphServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'temps': grpc.unary_unary_rpc_method_handler(
          servicer.temps,
          request_deserializer=to__gateway__pb2.temp_in.FromString,
          response_serializer=to__gateway__pb2.temp_out.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'temporalGraph', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class geographicGraphStub(object):
  """geographic service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.geos = channel.unary_unary(
        '/geographicGraph/geos',
        request_serializer=to__gateway__pb2.geo_in.SerializeToString,
        response_deserializer=to__gateway__pb2.geo_out.FromString,
        )


class geographicGraphServicer(object):
  """geographic service definition
  """

  def geos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_geographicGraphServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'geos': grpc.unary_unary_rpc_method_handler(
          servicer.geos,
          request_deserializer=to__gateway__pb2.geo_in.FromString,
          response_serializer=to__gateway__pb2.geo_out.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'geographicGraph', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
